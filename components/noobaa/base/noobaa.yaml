apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  creationTimestamp: null
  name: noobaas.noobaa.io
spec:
  group: noobaa.io
  names:
    kind: NooBaa
    listKind: NooBaaList
    plural: noobaas
    shortNames:
    - nb
    singular: noobaa
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: S3 Endpoints
      jsonPath: .status.services.serviceS3.nodePorts
      name: S3-Endpoints
      type: string
    - description: STS Endpoints
      jsonPath: .status.services.serviceSts.nodePorts
      name: Sts-Endpoints
      type: string
    - description: Syslog Endpoints
      jsonPath: .status.services.serviceSyslog.nodePorts
      name: Syslog-Endpoints
      type: string
    - description: Actual Image
      jsonPath: .status.actualImage
      name: Image
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NooBaa is the Schema for the NooBaas API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the noobaa system.
            properties:
              affinity:
                description: Affinity (optional) passed through to noobaa's pods
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                type: object
              annotations:
                additionalProperties:
                  additionalProperties:
                    type: string
                  description: Annotations are annotation for a given daemon
                  type: object
                description: The annotations-related configuration to add/set on each
                  Pod related object.
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              autoscaler:
                description: Configuration related to autoscaling
                properties:
                  autoscalerType:
                    description: Type of autoscaling (optional) for noobaa-endpoint,
                      hpav2(default) and keda - Prometheus metrics based
                    enum:
                    - hpav2
                    - keda
                    type: string
                  prometheusNamespace:
                    description: Prometheus namespace that scrap metrics from noobaa
                    type: string
                type: object
              bucketLogging:
                description: BucketLogging sets the configuration for bucket logging
                properties:
                  bucketLoggingPVC:
                    description: |-
                      BucketLoggingPVC (optional) specifies the name of the Persistent Volume Claim (PVC) to be used
                      for guaranteed logging when the logging type is set to 'guaranteed'. The PVC must support
                      ReadWriteMany (RWX) access mode to ensure reliable logging.
                      For ODF: If not provided, the default CephFS storage class will be used to create the PVC.
                    type: string
                  loggingType:
                    description: |-
                      LoggingType specifies the type of logging for the bucket
                      There are two types available: best-effort and guaranteed logging
                      - best-effort(default) - less immune to failures but with better performance
                      - guaranteed - much more reliable but need to provide a storage class that supports RWX PVs
                    type: string
                type: object
              bucketNotifications:
                description: BucketNotifications (optional) controls bucket notification
                  options
                properties:
                  connections:
                    description: |-
                      Connections - A list of secrets' names that are used by the notifications configrations
                      (in the TopicArn field).
                    items:
                      description: |-
                        SecretReference represents a Secret Reference. It has enough information to retrieve secret
                        in any namespace
                      properties:
                        name:
                          description: name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  enabled:
                    description: Enabled - whether bucket notifications is enabled
                    type: boolean
                  pvc:
                    description: |-
                      PVC (optional) specifies the name of the Persistent Volume Claim (PVC) to be used
                      for holding pending notifications files.
                      For ODF - If not provided, the default CepthFS storage class will be used to create the PVC.
                    type: string
                required:
                - enabled
                type: object
              cleanupPolicy:
                description: CleanupPolicy (optional) Indicates user's policy for
                  deletion
                properties:
                  allowNoobaaDeletion:
                    type: boolean
                  confirmation:
                    description: CleanupConfirmationProperty is a string that specifies
                      cleanup confirmation
                    type: string
                type: object
              coreResources:
                description: CoreResources (optional) overrides the default resource
                  requirements for the server container
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              dbConf:
                description: DBConf (optional) overrides the default postgresql db
                  config
                type: string
              dbImage:
                description: DBImage (optional) overrides the default image for the
                  db container
                type: string
              dbResources:
                description: DBResources (optional) overrides the default resource
                  requirements for the db container
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              dbSpec:
                description: DBSpec (optional) DB spec for a managed postgres cluster
                properties:
                  dbConf:
                    additionalProperties:
                      type: string
                    description: DBConf (optional) overrides the default postgresql
                      db config
                    type: object
                  dbMinVolumeSize:
                    description: |-
                      DBMinVolumeSize (optional) The initial size of the database volume.The actual size might be larger.
                      Increasing the size of the volume is supported if the underlying storage class supports volume expansion.
                      The new size should be larger than actualVolumeSize in dbStatus for the volume to be resized.
                    type: string
                  dbResources:
                    description: DBResources (optional) overrides the default resource
                      requirements for the db container
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  dbStorageClass:
                    description: DBStorageClass (optional) overrides the default cluster
                      StorageClass for the database volume.
                    type: string
                  image:
                    description: DBImage (optional) overrides the default image for
                      the db instances
                    type: string
                  instances:
                    description: Instances (optional) overrides the default number
                      of db instances
                    type: integer
                  postgresMajorVersion:
                    description: |-
                      PostgresMajorVersion (optional) overrides the default postgres major version
                      It is the user's responsibility to ensure that the postgres image matches the major version.
                    type: integer
                type: object
              dbStorageClass:
                description: |-
                  DBStorageClass (optional) overrides the default cluster StorageClass for the database volume.
                  For the time being this field is immutable and can only be set on system creation.
                  This affects where the system stores its database which contains system config,
                  buckets, objects meta-data and mapping file parts to storage locations.
                type: string
              dbType:
                description: |-
                  DBType (optional) overrides the default type image for the db container.
                  The only possible value is postgres
                enum:
                - postgres
                type: string
              dbVolumeResources:
                description: |-
                  DBVolumeResources (optional) overrides the default PVC resource requirements for the database volume.
                  For the time being this field is immutable and can only be set on system creation.
                  This is because volume size updates are only supported for increasing the size,
                  and only if the storage class specifies `allowVolumeExpansion: true`,
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              debugLevel:
                description: DebugLevel (optional) sets the debug level
                enum:
                - all
                - nsfs
                - warn
                - default_level
                type: integer
              defaultBackingStoreSpec:
                description: 'Deprecated: DefaultBackingStoreSpec is not supported
                  anymore, use ManualDefaultBackingStore instead.'
                properties:
                  awsS3:
                    description: AWSS3Spec specifies a backing store of type aws-s3
                    properties:
                      awsSTSRoleARN:
                        description: AWSSTSRoleARN allows to Assume Role and use AssumeRoleWithWebIdentity
                        type: string
                      region:
                        description: Region is the AWS region
                        type: string
                      secret:
                        description: |-
                          Secret refers to a secret that provides the credentials
                          The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sslDisabled:
                        description: SSLDisabled allows to disable SSL and use plain
                          http
                        type: boolean
                      targetBucket:
                        description: TargetBucket is the name of the target S3 bucket
                        type: string
                    required:
                    - targetBucket
                    type: object
                  azureBlob:
                    description: AzureBlob specifies a backing store of type azure-blob
                    properties:
                      secret:
                        description: |-
                          Secret refers to a secret that provides the credentials
                          The secret should define AccountName and AccountKey as provided by Azure Blob.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      targetBlobContainer:
                        description: TargetBlobContainer is the name of the target
                          Azure Blob container
                        type: string
                    required:
                    - secret
                    - targetBlobContainer
                    type: object
                  googleCloudStorage:
                    description: GoogleCloudStorage specifies a backing store of type
                      google-cloud-storage
                    properties:
                      secret:
                        description: |-
                          Secret refers to a secret that provides the credentials
                          The secret should define GoogleServiceAccountPrivateKeyJson containing the entire json string as provided by Google.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      targetBucket:
                        description: TargetBucket is the name of the target S3 bucket
                        type: string
                    required:
                    - secret
                    - targetBucket
                    type: object
                  ibmCos:
                    description: IBMCos specifies a backing store of type ibm-cos
                    properties:
                      endpoint:
                        description: 'Endpoint is the IBM COS compatible endpoint:
                          http(s)://host:port'
                        type: string
                      secret:
                        description: |-
                          Secret refers to a secret that provides the credentials
                          The secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      signatureVersion:
                        description: SignatureVersion specifies the client signature
                          version to use when signing requests.
                        type: string
                      targetBucket:
                        description: TargetBucket is the name of the target IBM COS
                          bucket
                        type: string
                    required:
                    - endpoint
                    - secret
                    - targetBucket
                    type: object
                  pvPool:
                    description: PVPool specifies a backing store of type pv-pool
                    properties:
                      numVolumes:
                        description: NumVolumes is the number of volumes to allocate
                        type: integer
                      resources:
                        description: VolumeResources represents the minimum resources
                          each volume should have.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      secret:
                        description: |-
                          Secret refers to a secret that provides the agent configuration
                          The secret should define AGENT_CONFIG containing agent_configuration from noobaa-core.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      storageClass:
                        description: StorageClass is the name of the storage class
                          to use for the PV's
                        type: string
                    required:
                    - numVolumes
                    type: object
                  s3Compatible:
                    description: S3Compatible specifies a backing store of type s3-compatible
                    properties:
                      endpoint:
                        description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port'
                        type: string
                      secret:
                        description: |-
                          Secret refers to a secret that provides the credentials
                          The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      signatureVersion:
                        description: SignatureVersion specifies the client signature
                          version to use when signing requests.
                        type: string
                      targetBucket:
                        description: TargetBucket is the name of the target S3 bucket
                        type: string
                    required:
                    - endpoint
                    - secret
                    - targetBucket
                    type: object
                  type:
                    description: Type is an enum of supported types
                    type: string
                required:
                - type
                type: object
              denyHTTP:
                description: DenyHTTP (optional) if given will deny access to the
                  NooBaa S3 service using HTTP (only HTTPS)
                type: boolean
              disableLoadBalancerService:
                description: DisableLoadBalancerService (optional) sets the service
                  type to ClusterIP instead of LoadBalancer
                nullable: true
                type: boolean
              disableRoutes:
                description: DisableRoutes (optional) disables the reconciliation
                  of openshift route resources in the cluster
                nullable: true
                type: boolean
              endpoints:
                description: |-
                  Endpoints (optional) sets configuration info for the noobaa endpoint
                  deployment.
                properties:
                  additionalVirtualHosts:
                    description: |-
                      AdditionalVirtualHosts (optional) provide a list of additional hostnames
                      (on top of the builtin names defined by the cluster: service name, elb name, route name)
                      to be used as virtual hosts by the the endpoints in the endpoint deployment
                    items:
                      type: string
                    type: array
                  maxCount:
                    description: |-
                      MaxCount, the number of endpoint instances (pods)
                      to be used as the upper bound when autoscaling
                    format: int32
                    type: integer
                  minCount:
                    description: |-
                      MinCount, the number of endpoint instances (pods)
                      to be used as the lower bound when autoscaling
                    format: int32
                    type: integer
                  resources:
                    description: Resources (optional) overrides the default resource
                      requirements for every endpoint pod
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              externalPgSSLRequired:
                description: ExternalPgSSLRequired (optional) holds an optional boolean
                  to force ssl connections to the external Postgres DB
                type: boolean
              externalPgSSLSecret:
                description: ExternalPgSSLSecret (optional) holds an optional secret
                  with client key and cert used for connecting to external Postgres
                  DB
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              externalPgSSLUnauthorized:
                description: ExternalPgSSLUnauthorized (optional) holds an optional
                  boolean to allow unauthorized connections to external Postgres DB
                type: boolean
              externalPgSecret:
                description: ExternalPgSecret (optional) holds an optional secret
                  with a url to an extrenal Postgres DB to be used
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              image:
                description: Image (optional) overrides the default image for the
                  server container
                type: string
              imagePullSecret:
                description: ImagePullSecret (optional) sets a pull secret for the
                  system image
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              joinSecret:
                description: |-
                  JoinSecret (optional) instructs the operator to join another cluster
                  and point to a secret that holds the join information
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              labels:
                additionalProperties:
                  additionalProperties:
                    type: string
                  description: Labels are label for a given daemon
                  type: object
                description: The labels-related configuration to add/set on each Pod
                  related object.
                nullable: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              loadBalancerSourceSubnets:
                description: |-
                  LoadBalancerSourceSubnets (optional) if given will allow access to the NooBaa services
                  only from the listed subnets. This field will have no effect if DisableLoadBalancerService is set
                  to true
                properties:
                  s3:
                    description: S3 is a list of subnets that will be allowed to access
                      the Noobaa S3 service
                    items:
                      type: string
                    type: array
                  sts:
                    description: STS is a list of subnets that will be allowed to
                      access the Noobaa STS service
                    items:
                      type: string
                    type: array
                type: object
              logResources:
                description: LogResources (optional) overrides the default resource
                  requirements for the noobaa-log-processor container
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              manualDefaultBackingStore:
                description: |-
                  ManualDefaultBackingStore (optional - default value is false) if true the default backingstore/namespacestore
                  will not be reconciled by the operator and it should be manually handled by the user. It will allow the
                  user to  delete DefaultBackingStore/DefaultNamespaceStore, user needs to delete associated buckets and
                  update the admin account with new BackingStore/NamespaceStore in order to delete the DefaultBackingStore/DefaultNamespaceStore
                nullable: true
                type: boolean
              pvPoolDefaultStorageClass:
                description: |-
                  PVPoolDefaultStorageClass (optional) overrides the default cluster StorageClass for the pv-pool volumes.
                  This affects where the system stores data chunks (encrypted).
                  Updates to this field will only affect new pv-pools,
                  but updates to existing pools are not supported by the operator.
                type: string
              region:
                description: |-
                  Region (optional) provide a region for the location info
                  of the endpoints in the endpoint deployment
                type: string
              security:
                description: Security represents security settings
                properties:
                  kms:
                    description: KeyManagementServiceSpec represent various details
                      of the KMS server
                    properties:
                      connectionDetails:
                        additionalProperties:
                          type: string
                        type: object
                      enableKeyRotation:
                        type: boolean
                      schedule:
                        type: string
                      tokenSecretName:
                        type: string
                    type: object
                type: object
              tolerations:
                description: Tolerations (optional) passed through to noobaa's pods
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: Most recently observed status of the noobaa system.
            properties:
              accounts:
                description: Accounts reports accounts info for the admin account
                properties:
                  admin:
                    description: UserStatus is the status info of a user secret
                    properties:
                      secretRef:
                        description: |-
                          SecretReference represents a Secret Reference. It has enough information to retrieve secret
                          in any namespace
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - secretRef
                    type: object
                required:
                - admin
                type: object
              actualImage:
                description: ActualImage is set to report which image the operator
                  is using
                type: string
              beforeUpgradeDbImage:
                description: BeforeUpgradeDbImage is the db image used before last
                  db upgrade
                type: string
              conditions:
                description: Conditions is a list of conditions related to operator
                  reconciliation
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              dbStatus:
                description: DBStatus is the status of the postgres cluster
                properties:
                  actualVolumeSize:
                    description: ActualVolumeSize is the actual size of the postgres
                      cluster volume. This can be different than the requested size
                    type: string
                  currentPgMajorVersion:
                    description: CurrentPgMajorVersion is the major version of the
                      postgres cluster
                    type: integer
                  dbClusterStatus:
                    description: DBClusterStatus is the status of the postgres cluster
                    type: string
                  dbCurrentImage:
                    description: DBCurrentImage is the image of the postgres cluster
                    type: string
                type: object
              endpoints:
                description: |-
                  Endpoints reports the actual number of endpoints in the endpoint deployment
                  and the virtual hosts list used recognized by the endpoints
                properties:
                  readyCount:
                    format: int32
                    type: integer
                  virtualHosts:
                    items:
                      type: string
                    type: array
                required:
                - readyCount
                - virtualHosts
                type: object
              lastKeyRotateTime:
                description: LastKeyRotateTime is the time system ran an encryption
                  key rotate
                format: date-time
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration is the most recent generation observed for this noobaa system.
                  It corresponds to the CR generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Phase is a simple, high-level summary of where the System
                  is in its lifecycle
                type: string
              postgresUpdatePhase:
                description: Upgrade reports the status of the ongoing postgres upgrade
                  process
                type: string
              readme:
                description: Readme is a user readable string with explanations on
                  the system
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects related to this operator.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              services:
                description: Services reports addresses for the services
                properties:
                  serviceMgmt:
                    description: ServiceStatus is the status info and network addresses
                      of a service
                    properties:
                      externalDNS:
                        description: ExternalDNS are external public addresses for
                          the service
                        items:
                          type: string
                        type: array
                      externalIP:
                        description: |-
                          ExternalIP are external public addresses for the service
                          LoadBalancerPorts such as AWS ELB provide public address and load balancing for the service
                          IngressPorts are manually created public addresses for the service
                          https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                          https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                          https://kubernetes.io/docs/concepts/services-networking/ingress/
                        items:
                          type: string
                        type: array
                      internalDNS:
                        description: InternalDNS are internal addresses of the service
                          inside the cluster
                        items:
                          type: string
                        type: array
                      internalIP:
                        description: |-
                          InternalIP are internal addresses of the service inside the cluster
                          https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        items:
                          type: string
                        type: array
                      nodePorts:
                        description: |-
                          NodePorts are the most basic network available.
                          NodePorts use the networks available on the hosts of kubernetes nodes.
                          This generally works from within a pod, and from the internal
                          network of the nodes, but may fail from public network.
                          https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                        items:
                          type: string
                        type: array
                      podPorts:
                        description: |-
                          PodPorts are the second most basic network address.
                          Every pod has an IP in the cluster and the pods network is a mesh
                          so the operator running inside a pod in the cluster can use this address.
                          Note: pod IPs are not guaranteed to persist over restarts, so should be rediscovered.
                          Note2: when running the operator outside of the cluster, pod IP is not accessible.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceS3:
                    description: ServiceStatus is the status info and network addresses
                      of a service
                    properties:
                      externalDNS:
                        description: ExternalDNS are external public addresses for
                          the service
                        items:
                          type: string
                        type: array
                      externalIP:
                        description: |-
                          ExternalIP are external public addresses for the service
                          LoadBalancerPorts such as AWS ELB provide public address and load balancing for the service
                          IngressPorts are manually created public addresses for the service
                          https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                          https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                          https://kubernetes.io/docs/concepts/services-networking/ingress/
                        items:
                          type: string
                        type: array
                      internalDNS:
                        description: InternalDNS are internal addresses of the service
                          inside the cluster
                        items:
                          type: string
                        type: array
                      internalIP:
                        description: |-
                          InternalIP are internal addresses of the service inside the cluster
                          https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        items:
                          type: string
                        type: array
                      nodePorts:
                        description: |-
                          NodePorts are the most basic network available.
                          NodePorts use the networks available on the hosts of kubernetes nodes.
                          This generally works from within a pod, and from the internal
                          network of the nodes, but may fail from public network.
                          https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                        items:
                          type: string
                        type: array
                      podPorts:
                        description: |-
                          PodPorts are the second most basic network address.
                          Every pod has an IP in the cluster and the pods network is a mesh
                          so the operator running inside a pod in the cluster can use this address.
                          Note: pod IPs are not guaranteed to persist over restarts, so should be rediscovered.
                          Note2: when running the operator outside of the cluster, pod IP is not accessible.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceSts:
                    description: ServiceStatus is the status info and network addresses
                      of a service
                    properties:
                      externalDNS:
                        description: ExternalDNS are external public addresses for
                          the service
                        items:
                          type: string
                        type: array
                      externalIP:
                        description: |-
                          ExternalIP are external public addresses for the service
                          LoadBalancerPorts such as AWS ELB provide public address and load balancing for the service
                          IngressPorts are manually created public addresses for the service
                          https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                          https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                          https://kubernetes.io/docs/concepts/services-networking/ingress/
                        items:
                          type: string
                        type: array
                      internalDNS:
                        description: InternalDNS are internal addresses of the service
                          inside the cluster
                        items:
                          type: string
                        type: array
                      internalIP:
                        description: |-
                          InternalIP are internal addresses of the service inside the cluster
                          https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        items:
                          type: string
                        type: array
                      nodePorts:
                        description: |-
                          NodePorts are the most basic network available.
                          NodePorts use the networks available on the hosts of kubernetes nodes.
                          This generally works from within a pod, and from the internal
                          network of the nodes, but may fail from public network.
                          https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                        items:
                          type: string
                        type: array
                      podPorts:
                        description: |-
                          PodPorts are the second most basic network address.
                          Every pod has an IP in the cluster and the pods network is a mesh
                          so the operator running inside a pod in the cluster can use this address.
                          Note: pod IPs are not guaranteed to persist over restarts, so should be rediscovered.
                          Note2: when running the operator outside of the cluster, pod IP is not accessible.
                        items:
                          type: string
                        type: array
                    type: object
                  serviceSyslog:
                    description: ServiceStatus is the status info and network addresses
                      of a service
                    properties:
                      externalDNS:
                        description: ExternalDNS are external public addresses for
                          the service
                        items:
                          type: string
                        type: array
                      externalIP:
                        description: |-
                          ExternalIP are external public addresses for the service
                          LoadBalancerPorts such as AWS ELB provide public address and load balancing for the service
                          IngressPorts are manually created public addresses for the service
                          https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
                          https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
                          https://kubernetes.io/docs/concepts/services-networking/ingress/
                        items:
                          type: string
                        type: array
                      internalDNS:
                        description: InternalDNS are internal addresses of the service
                          inside the cluster
                        items:
                          type: string
                        type: array
                      internalIP:
                        description: |-
                          InternalIP are internal addresses of the service inside the cluster
                          https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        items:
                          type: string
                        type: array
                      nodePorts:
                        description: |-
                          NodePorts are the most basic network available.
                          NodePorts use the networks available on the hosts of kubernetes nodes.
                          This generally works from within a pod, and from the internal
                          network of the nodes, but may fail from public network.
                          https://kubernetes.io/docs/concepts/services-networking/service/#nodeport
                        items:
                          type: string
                        type: array
                      podPorts:
                        description: |-
                          PodPorts are the second most basic network address.
                          Every pod has an IP in the cluster and the pods network is a mesh
                          so the operator running inside a pod in the cluster can use this address.
                          Note: pod IPs are not guaranteed to persist over restarts, so should be rediscovered.
                          Note2: when running the operator outside of the cluster, pod IP is not accessible.
                        items:
                          type: string
                        type: array
                    type: object
                required:
                - serviceMgmt
                - serviceS3
                type: object
              upgradePhase:
                description: Upgrade reports the status of the ongoing upgrade process
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  creationTimestamp: null
  name: backingstores.noobaa.io
spec:
  group: noobaa.io
  names:
    kind: BackingStore
    listKind: BackingStoreList
    plural: backingstores
    singular: backingstore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Type
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackingStore is the Schema for the backingstores API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the noobaa BackingStore.
            properties:
              awsS3:
                description: AWSS3Spec specifies a backing store of type aws-s3
                properties:
                  awsSTSRoleARN:
                    description: AWSSTSRoleARN allows to Assume Role and use AssumeRoleWithWebIdentity
                    type: string
                  region:
                    description: Region is the AWS region
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sslDisabled:
                    description: SSLDisabled allows to disable SSL and use plain http
                    type: boolean
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - targetBucket
                type: object
              azureBlob:
                description: AzureBlob specifies a backing store of type azure-blob
                properties:
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AccountName and AccountKey as provided by Azure Blob.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  targetBlobContainer:
                    description: TargetBlobContainer is the name of the target Azure
                      Blob container
                    type: string
                required:
                - secret
                - targetBlobContainer
                type: object
              googleCloudStorage:
                description: GoogleCloudStorage specifies a backing store of type
                  google-cloud-storage
                properties:
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define GoogleServiceAccountPrivateKeyJson containing the entire json string as provided by Google.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - secret
                - targetBucket
                type: object
              ibmCos:
                description: IBMCos specifies a backing store of type ibm-cos
                properties:
                  endpoint:
                    description: 'Endpoint is the IBM COS compatible endpoint: http(s)://host:port'
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  signatureVersion:
                    description: SignatureVersion specifies the client signature version
                      to use when signing requests.
                    type: string
                  targetBucket:
                    description: TargetBucket is the name of the target IBM COS bucket
                    type: string
                required:
                - endpoint
                - secret
                - targetBucket
                type: object
              pvPool:
                description: PVPool specifies a backing store of type pv-pool
                properties:
                  numVolumes:
                    description: NumVolumes is the number of volumes to allocate
                    type: integer
                  resources:
                    description: VolumeResources represents the minimum resources
                      each volume should have.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  secret:
                    description: |-
                      Secret refers to a secret that provides the agent configuration
                      The secret should define AGENT_CONFIG containing agent_configuration from noobaa-core.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClass:
                    description: StorageClass is the name of the storage class to
                      use for the PV's
                    type: string
                required:
                - numVolumes
                type: object
              s3Compatible:
                description: S3Compatible specifies a backing store of type s3-compatible
                properties:
                  endpoint:
                    description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port'
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  signatureVersion:
                    description: SignatureVersion specifies the client signature version
                      to use when signing requests.
                    type: string
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - endpoint
                - secret
                - targetBucket
                type: object
              type:
                description: Type is an enum of supported types
                type: string
            required:
            - type
            type: object
          status:
            description: Most recently observed status of the noobaa BackingStore.
            properties:
              conditions:
                description: Conditions is a list of conditions related to operator
                  reconciliation
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              mode:
                description: Mode specifies the updating mode of a BackingStore
                properties:
                  modeCode:
                    description: ModeCode specifies the updated mode of backingstore
                    type: string
                  timeStamp:
                    description: TimeStamp specifies the update time of backingstore
                      new mode
                    type: string
                type: object
              phase:
                description: Phase is a simple, high-level summary of where the backing
                  store is in its lifecycle
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects related to this operator.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  creationTimestamp: null
  name: namespacestores.noobaa.io
spec:
  group: noobaa.io
  names:
    kind: NamespaceStore
    listKind: NamespaceStoreList
    plural: namespacestores
    singular: namespacestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Type
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NamespaceStore is the Schema for the namespacestores API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the noobaa NamespaceStore.
            properties:
              accessMode:
                description: AccessMode is an enum of supported access modes
                type: string
              awsS3:
                description: AWSS3Spec specifies a namespace store of type aws-s3
                properties:
                  awsSTSRoleARN:
                    description: AWSSTSRoleARN allows to Assume Role and use AssumeRoleWithWebIdentity
                    type: string
                  region:
                    description: Region is the AWS region
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sslDisabled:
                    description: SSLDisabled allows to disable SSL and use plain http
                    type: boolean
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - targetBucket
                type: object
              azureBlob:
                description: AzureBlob specifies a namespace store of type azure-blob
                properties:
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AccountName and AccountKey as provided by Azure Blob.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  targetBlobContainer:
                    description: TargetBlobContainer is the name of the target Azure
                      Blob container
                    type: string
                required:
                - secret
                - targetBlobContainer
                type: object
              googleCloudStorage:
                description: GoogleCloudStorage specifies a namespace store of type
                  google-cloud-storage
                properties:
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define GoogleServiceAccountPrivateKeyJson containing the entire json string as provided by Google.
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - secret
                - targetBucket
                type: object
              ibmCos:
                description: IBMCos specifies a namespace store of type ibm-cos
                properties:
                  endpoint:
                    description: 'Endpoint is the IBM COS compatible endpoint: http(s)://host:port'
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  signatureVersion:
                    description: SignatureVersion specifies the client signature version
                      to use when signing requests.
                    type: string
                  targetBucket:
                    description: TargetBucket is the name of the target IBM COS bucket
                    type: string
                required:
                - endpoint
                - secret
                - targetBucket
                type: object
              nsfs:
                description: NSFS specifies a namespace store of type nsfs
                properties:
                  fsBackend:
                    description: FsBackend is the backend type of the file system
                    enum:
                    - CEPH_FS
                    - GPFS
                    - NFSv4
                    type: string
                  pvcName:
                    description: PvcName is the name of the pvc in which the file
                      system resides
                    type: string
                  subPath:
                    description: SubPath is a path to a sub directory in the pvc file
                      system
                    type: string
                required:
                - pvcName
                type: object
              s3Compatible:
                description: S3Compatible specifies a namespace store of type s3-compatible
                properties:
                  endpoint:
                    description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port'
                    type: string
                  secret:
                    description: |-
                      Secret refers to a secret that provides the credentials
                      The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  signatureVersion:
                    description: SignatureVersion specifies the client signature version
                      to use when signing requests.
                    type: string
                  targetBucket:
                    description: TargetBucket is the name of the target S3 bucket
                    type: string
                required:
                - endpoint
                - secret
                - targetBucket
                type: object
              type:
                description: Type is an enum of supported types
                type: string
            required:
            - type
            type: object
          status:
            description: Most recently observed status of the noobaa NamespaceStore.
            properties:
              conditions:
                description: Conditions is a list of conditions related to operator
                  reconciliation
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              mode:
                description: Mode specifies the updating mode of a NamespaceStore
                properties:
                  modeCode:
                    description: ModeCode specifies the updated mode of namespacestore
                    type: string
                  timeStamp:
                    description: TimeStamp specifies the update time of namespacestore
                      new mode
                    type: string
                type: object
              phase:
                description: Phase is a simple, high-level summary of where the namespace
                  store is in its lifecycle
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects related to this operator.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  creationTimestamp: null
  name: bucketclasses.noobaa.io
spec:
  group: noobaa.io
  names:
    kind: BucketClass
    listKind: BucketClassList
    plural: bucketclasses
    singular: bucketclass
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Placement
      jsonPath: .spec.placementPolicy
      name: Placement
      type: string
    - description: NamespacePolicy
      jsonPath: .spec.namespacePolicy
      name: NamespacePolicy
      type: string
    - description: Quota
      jsonPath: .spec.quota
      name: Quota
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BucketClass is the Schema for the bucketclasses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the noobaa BucketClass.
            properties:
              namespacePolicy:
                description: NamespacePolicy specifies the namespace policy for the
                  bucket class
                properties:
                  cache:
                    description: Cache is a namespace policy configuration of type
                      Cache
                    properties:
                      caching:
                        description: Caching is the cache specification for the ns
                          policy
                        properties:
                          prefix:
                            description: Prefix is prefix of the future cached data
                            type: string
                          ttl:
                            description: TTL specifies the cache ttl
                            type: integer
                        type: object
                      hubResource:
                        description: HubResource is the read and write resource name
                          to use
                        type: string
                    type: object
                  multi:
                    description: Multi is a namespace policy configuration of type
                      Multi
                    properties:
                      readResources:
                        description: ReadResources is an ordered list of read resources
                          names to use
                        items:
                          type: string
                        type: array
                      writeResource:
                        description: WriteResource is the write resource name to use
                        type: string
                    type: object
                  single:
                    description: Single is a namespace policy configuration of type
                      Single
                    properties:
                      resource:
                        description: Resource is the read and write resource name
                          to use
                        type: string
                    type: object
                  type:
                    description: Type is the namespace policy type
                    type: string
                type: object
              placementPolicy:
                description: PlacementPolicy specifies the placement policy for the
                  bucket class
                properties:
                  tiers:
                    description: |-
                      Tiers is an ordered list of tiers to use.
                      The model is a waterfall - push to first tier by default,
                      and when no more space spill "cold" storage to next tier.
                    items:
                      description: Tier specifies a storage tier
                      properties:
                        backingStores:
                          description: |-
                            BackingStores is an unordered list of backing store names.
                            The meaning of the list depends on the placement.
                          items:
                            type: string
                          type: array
                        placement:
                          description: |-
                            Placement specifies the type of placement for the tier
                            If empty it should have a single backing store.
                          enum:
                          - Spread
                          - Mirror
                          type: string
                      type: object
                    type: array
                type: object
              quota:
                description: Quota specifies the quota configuration for the bucket
                  class
                properties:
                  maxObjects:
                    description: limits the max total quantity of objects per bucket
                    type: string
                  maxSize:
                    description: limits the max total size of objects per bucket
                    type: string
                type: object
              replicationPolicy:
                description: ReplicationPolicy specifies a json of replication rules
                  for the bucketclass
                type: string
            type: object
          status:
            description: Most recently observed status of the noobaa BackingStore.
            properties:
              conditions:
                description: Conditions is a list of conditions related to operator
                  reconciliation
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              mode:
                description: Mode is a simple, high-level summary of where the System
                  is in its lifecycle
                type: string
              phase:
                description: Phase is a simple, high-level summary of where the System
                  is in its lifecycle
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects related to this operator.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  creationTimestamp: null
  name: noobaaaccounts.noobaa.io
spec:
  group: noobaa.io
  names:
    kind: NooBaaAccount
    listKind: NooBaaAccountList
    plural: noobaaaccounts
    singular: noobaaaccount
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NooBaaAccount is the Schema for the NooBaaAccounts API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the NooBaaAccount.
            properties:
              allow_bucket_creation:
                description: AllowBucketCreate specifies if new buckets can be created
                  by this account
                type: boolean
              default_resource:
                description: DefaultResource specifies which backingstore this account
                  will use to create new buckets
                type: string
              force_md5_etag:
                description: ForceMd5Etag specifies whether MD5 Etags should be calculated
                  for the account or not
                type: boolean
              nsfs_account_config:
                description: NsfsAccountConfig specifies the configurations on Namespace
                  FS
                nullable: true
                properties:
                  distinguished_name:
                    type: string
                  gid:
                    type: integer
                  new_buckets_path:
                    type: string
                  nsfs_only:
                    type: boolean
                  uid:
                    type: integer
                required:
                - new_buckets_path
                - nsfs_only
                type: object
            required:
            - allow_bucket_creation
            type: object
          status:
            description: Most recently observed status of the NooBaaAccount.
            properties:
              conditions:
                description: Conditions is a list of conditions related to operator
                  reconciliation
                items:
                  description: |-
                    Condition represents the state of the operator's
                    reconciliation functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase is a simple, high-level summary of where the noobaa
                  user is in its lifecycle
                type: string
              relatedObjects:
                description: RelatedObjects is a list of objects related to this operator.
                items:
                  description: ObjectReference contains enough information to let
                    you inspect or modify the referred object.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: objectbucketclaims.objectbucket.io
spec:
  conversion:
    strategy: None
  group: objectbucket.io
  names:
    kind: ObjectBucketClaim
    listKind: ObjectBucketClaimList
    plural: objectbucketclaims
    shortNames:
    - obc
    - obcs
    singular: objectbucketclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: StorageClass
      jsonPath: .spec.storageClassName
      name: Storage-Class
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          spec:
            description: Specification of the desired behavior of the claim.
            properties:
              additionalConfig:
                additionalProperties:
                  type: string
                description: AdditionalConfig gives providers a location to set proprietary
                  config values (tenant, namespace, etc)
                type: object
              bucketName:
                description: BucketName (not recommended) the name of the bucket.
                  Caution! In-store bucket names may collide across namespaces.  If
                  you define the name yourself, try to make it as unique as possible.
                type: string
              generateBucketName:
                description: GenerateBucketName (recommended) a prefix for a bucket
                  name to be followed by a hyphen and 5 random characters. Protects
                  against in-store name collisions.
                type: string
              objectBucketName:
                description: ObjectBucketName is the name of the object bucket resource.
                  This is the authoritative determination for binding.
                type: string
              storageClassName:
                description: StorageClass names the StorageClass object representing
                  the desired provisioner and parameters
                type: string
            required:
            - storageClassName
            type: object
          status:
            description: Most recently observed status of the claim.
            properties:
              phase:
                description: ObjectBucketClaimStatusPhase is set by the controller
                  to save the state of the provisioning process
                enum:
                - Pending
                - Bound
                - Released
                - Failed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: objectbuckets.objectbucket.io
spec:
  conversion:
    strategy: None
  group: objectbucket.io
  names:
    kind: ObjectBucket
    listKind: ObjectBucketList
    plural: objectbuckets
    shortNames:
    - ob
    - obs
    singular: objectbucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: StorageClass
      jsonPath: .spec.storageClassName
      name: Storage-Class
      type: string
    - description: ClaimNamespace
      jsonPath: .spec.claimRef.namespace
      name: Claim-Namespace
      type: string
    - description: ClaimName
      jsonPath: .spec.claimRef.name
      name: Claim-Name
      type: string
    - description: ReclaimPolicy
      jsonPath: .spec.reclaimPolicy
      name: Reclaim-Policy
      type: string
    - description: Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          spec:
            description: Specification of the desired behavior of the bucket.
            properties:
              additionalState:
                additionalProperties:
                  type: string
                description: additionalState gives providers a location to set proprietary
                  config values (tenant, namespace, etc)
                type: object
              claimRef:
                description: ObjectReference to ObjectBucketClaim
                type: object
              endpoint:
                description: Endpoint contains all connection relevant data that an
                  app may require for accessing the bucket
                properties:
                  additionalConfig:
                    additionalProperties:
                      type: string
                    description: AdditionalConfig gives providers a location to set
                      proprietary config values (tenant, namespace, etc)
                    type: object
                  bucketHost:
                    description: Bucket address hostname
                    type: string
                  bucketName:
                    description: Bucket name
                    type: string
                  bucketPort:
                    description: Bucket address port
                    type: integer
                  region:
                    description: Bucket region
                    type: string
                  subRegion:
                    description: Bucket sub-region
                    type: string
                type: object
              reclaimPolicy:
                description: Describes a policy for end-of-life maintenance of ObjectBucket.
                enum:
                - Delete
                - Retain
                - Recycle
                type: string
              storageClassName:
                description: StorageClass names the StorageClass object representing
                  the desired provisioner and parameters
                type: string
            required:
            - storageClassName
            type: object
          status:
            description: Most recently observed status of the bucket.
            properties:
              phase:
                description: ObjectBucketStatusPhase is set by the controller to save
                  the state of the provisioning process
                enum:
                - Bound
                - Released
                - Failed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    openshift.io/cluster-monitoring: "true"
  name: default
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.noobaa-mgmt: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"noobaa-mgmt"}}'
  creationTimestamp: null
  name: noobaa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: noobaa
  namespace: default
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - noobaa
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - noobaa.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - ""
  resourceNames:
  - noobaa-db-pg-0
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  - prometheusrules
  verbs:
  - get
  - create
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resourceNames:
  - noobaa-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - cloudcredential.openshift.io
  resources:
  - credentialsrequests
  verbs:
  - get
  - create
  - update
  - list
  - watch
- apiGroups:
  - ceph.rook.io
  resources:
  - cephobjectstores
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ceph.rook.io
  resources:
  - cephobjectstoreusers
  verbs:
  - get
  - create
  - update
  - list
  - watch
- apiGroups:
  - ceph.rook.io
  resources:
  - cephclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - create
  - update
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - create
  - update
  - patch
  - list
  - watch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - patch
  - list
  - watch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - postgresql.cnpg.noobaa.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - postgresql.cnpg.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: noobaa
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: noobaa
subjects:
- kind: ServiceAccount
  name: noobaa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: noobaa-core
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: noobaa-endpoint
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: noobaa-core
  namespace: default
rules:
- apiGroups:
  - noobaa.io
  resources:
  - '*'
  - noobaas
  - backingstores
  - bucketclasses
  - noobaas/finalizers
  - backingstores/finalizers
  - bucketclasses/finalizers
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resourceNames:
  - noobaa-core
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: noobaa-endpoint
  namespace: default
rules:
- apiGroups:
  - noobaa.io
  resources:
  - '*'
  - noobaas
  - backingstores
  - bucketclasses
  - noobaas/finalizers
  - backingstores/finalizers
  - bucketclasses/finalizers
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resourceNames:
  - noobaa-endpoint
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: noobaa-core
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: noobaa-core
subjects:
- kind: ServiceAccount
  name: noobaa-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: noobaa-endpoint
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: noobaa-endpoint
subjects:
- kind: ServiceAccount
  name: noobaa-endpoint
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: default.noobaa.io
  namespace: default
rules:
- apiGroups:
  - noobaa.io
  resources:
  - '*'
  - noobaas
  - backingstores
  - bucketclasses
  - noobaas/finalizers
  - backingstores/finalizers
  - bucketclasses/finalizers
  verbs:
  - '*'
- apiGroups:
  - objectbucket.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - persistentvolumes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
  - list
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - clustertriggerauthentications
  - scaledobjects
  - triggerauthentications
  - scaledjobs
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - objectstorage.k8s.io
  resources:
  - buckets
  - bucketaccesses
  - bucketclaims
  - bucketaccessclasses
  - buckets/status
  - bucketaccesses/status
  - bucketclaims/status
  - bucketaccessclasses/status
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - config.openshift.io
  resources:
  - infrastructures
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: default.noobaa.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default.noobaa.io
subjects:
- kind: ServiceAccount
  name: noobaa
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: noobaa-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      noobaa-operator: deployment
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: noobaa
        noobaa-operator: deployment
    spec:
      containers:
      - env:
        - name: OPERATOR_NAME
          value: noobaa-operator
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: noobaa/noobaa-operator:5.19.0
        name: noobaa-operator
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/run/secrets/openshift/serviceaccount
          name: bound-sa-token
          readOnly: true
        - mountPath: /etc/ocp-injected-ca-bundle
          name: ocp-injected-ca-bundle
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: noobaa
      volumes:
      - name: bound-sa-token
        projected:
          sources:
          - serviceAccountToken:
              audience: openshift
              path: token
      - configMap:
          items:
          - key: ca-bundle.crt
            path: ca-bundle.crt
          name: ocp-injected-ca-bundle
          optional: true
        name: ocp-injected-ca-bundle
status: {}
---
apiVersion: noobaa.io/v1alpha1
kind: NooBaa
metadata:
  creationTimestamp: null
  finalizers:
  - noobaa.io/graceful_finalizer
  name: noobaa
  namespace: default
spec:
  autoscaler: {}
  bucketLogging: {}
  bucketNotifications:
    enabled: false
  cleanupPolicy: {}
  dbImage: quay.io/sclorg/postgresql-16-c9s
  dbType: postgres
  image: noobaa/noobaa-core:master-20250521
  disableLoadBalancerService: true
  loadBalancerSourceSubnets: {}
  security:
    kms: {}
status:
  lastKeyRotateTime: null
